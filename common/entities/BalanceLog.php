<?php

namespace common\entities;

use Yii;

/**
 * This is the model class for table "balance_log".
 *
 * @property int $id
 * @property int $user_id
 * @property string $old_balance
 * @property string $new_balance
 * @property string $diff_balance
 * @property string $controller_id
 * @property string $action_id
 * @property string $type
 * @property string $fixed
 * @property string $query
 * @property string $post
 * @property string $created_at
 *
 * @property User $user
 */
class BalanceLog extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'balance_log';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['user_id'], 'required'],
            [['user_id'], 'default', 'value' => null],
            [['user_id'], 'integer'],
            [['created_at'], 'safe'],
            [['old_balance', 'new_balance', 'diff_balance', 'controller_id', 'action_id', 'type', 'fixed', 'query', 'post'], 'string', 'max' => 255],
            //[['user_id'], 'exist', 'skipOnError' => true, 'targetClass' => User::className(), 'targetAttribute' => ['user_id' => 'id']],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'user_id' => Yii::t('app', 'User ID'),
            'old_balance' => Yii::t('app', 'Old Balance'),
            'new_balance' => Yii::t('app', 'New Balance'),
            'controller_id' => Yii::t('app', 'Controller ID'),
            'action_id' => Yii::t('app', 'Action ID'),
            'type' => Yii::t('app', 'Type'),
            'fixed' => Yii::t('app', 'Fixed'),
            'query' => Yii::t('app', 'Query'),
            'post' => Yii::t('app', 'Post'),
            'created_at' => Yii::t('app', 'Created At'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(User::className(), ['id' => 'user_id']);
    }

    /**
     * @inheritdoc
     * @return BalanceLogQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new BalanceLogQuery(get_called_class());
    }

    public function beforeValidate()
    {
        if (!$this->created_at ){
            $this->created_at = date('Y-m-d H:i:s');
        }
        $this->diff_balance = '' . ($this->new_balance*1 - $this->old_balance*1);
        $this->new_balance = (string)$this->new_balance;
        $this->old_balance = (string)$this->old_balance;
        $this->controller_id=Yii::$app->controller->id;
        $this->action_id=Yii::$app->controller->action->id;
        $this->type=Yii::$app->id;
        if (isset(Yii::$app->controller->actionParams)) {
            $this->query = \GuzzleHttp\json_encode(Yii::$app->controller->actionParams);
        }
        //$this->post=\GuzzleHttp\json_encode($_POST);
        return parent::beforeValidate(); // TODO: Change the autogenerated stub
    }

    public function fix(){
        $this->fixed = '1';
        $this->save();
    }
}
